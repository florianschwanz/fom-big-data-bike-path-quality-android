name: Build and Release
on:
  push:
    tags:
      - 'v*'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.3
      - name: Set up JDK environment
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 1.8
      - name: Build artifact
        id: build-artifact
        env:
          MAPBOX_DOWNLOADS_TOKEN: ${{ secrets.MAPBOX_DOWNLOADS_TOKEN }}
        uses: eskatos/gradle-command-action@v1.3.3
        with:
          gradle-version: current
          wrapper-cache-enabled: true
          dependencies-cache-enabled: true
          configuration-cache-enabled: true
          arguments: assembleRelease
      - name: Debug 1
        run: |
          echo "secrets.RELEASE_KEYALIAS ${{secrets.RELEASE_KEYALIAS}}"
          echo "secrets.RELEASE_KEYSTORE ${{secrets.RELEASE_KEYSTORE}}"
          echo "secrets.RELEASE_KEYSTORE_PASSWORD ${{secrets.RELEASE_KEYSTORE_PASSWORD}}"
          echo "secrets.RELEASE_KEY_PASSWORD ${{secrets.RELEASE_KEY_PASSWORD}}"
      - name: Sign artifact
        id: sign-artifact
        uses: r0adkll/sign-android-release@v1.0.1
        with:
          releaseDirectory: app/build/outputs/apk/release
          alias: ${{ secrets.RELEASE_KEYALIAS }}
          signingKeyBase64: ${{ secrets.RELEASE_KEYSTORE }}
          keyStorePassword: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.RELEASE_KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "30.0.3"
      - name: Debug 2
        run: ls app/build/outputs/apk/release
      - name: Debug 3
        run: echo "signedReleaseFile ${{steps.sign-artifact.outputs.signedReleaseFile}}"
      - name: Upload apk file
        id: upload-apk-file
        uses: actions/upload-artifact@v2.2.0
        with:
          name: Upload artifact
          path: ${{steps.sign-artifact.outputs.signedReleaseFile}}
      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Save artifact name
        id: save-artifact-name
        run: |
          ARTIFACT_PATHNAME_APK=$(ls app/build/outputs/apk/release/*.apk | head -n 1)
          ARTIFACT_NAME_APK=$(basename $ARTIFACT_PATHNAME_APK)
          echo "ARTIFACT_NAME_APK is " ${ARTIFACT_NAME_APK}
          echo "ARTIFACT_PATHNAME_APK=${ARTIFACT_PATHNAME_APK}" >> $GITHUB_ENV
          echo "ARTIFACT_NAME_APK=${ARTIFACT_NAME_APK}" >> $GITHUB_ENV
      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ${{ env.ARTIFACT_PATHNAME_APK }}
          asset_name: ${{ env.ARTIFACT_NAME_APK }}
          asset_content_type: application/zip